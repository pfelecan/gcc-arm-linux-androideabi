#!/usr/bin/make -f
# -*- makefile -*-

#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

NJOBS = -j -l 12

d = debian/gcc-arm-linux-androideabi
DESTDIR = $(CURDIR)/tmp

include /usr/share/dpkg/default.mk

TARGET	= arm-linux-androideabi
TARGET_TOOLS_PATH = $(DESTDIR)/usr
TARGET_TOOLS_PREFIX = $(TARGET_TOOLS_PATH)/bin/$(TARGET)-

SET_PATH = PATH=$(DESTDIR)/usr/bin:$(PATH)

CFLAGS_FOR_TARGET = -O2 -Os -g -DTARGET_POSIX_IO -fno-short-enums -isystem $(CURDIR)/android/bionic/libc/include -isystem $(CURDIR)/android/bionic/libc/kernel/common -isystem $(CURDIR)/android/bionic/libc/kernel/arch-arm -isystem $(CURDIR)/android/bionic/libc/arch-arm/include -isystem $(CURDIR)/android/bionic/libm/include -isystem $(CURDIR)/android/bionic/libm/include/arm -isystem $(CURDIR)/android/bionic/libm/arm -include $(CURDIR)/android/bionic/libc/include/sys/limits.h

CFLAGS=-O2

stamps/binutils1:
	mkdir -p binutils/build1
	cd binutils/build1 && \
	  ../binutils-current/configure \
		--prefix=/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--disable-docs \
		--disable-nls \
		--disable-shared \
		--disable-werror \
		--disable-ppl-version-check \
		--enable-gold=default \
		--disable-cloog-version-check \
		--enable-cloog-backend=isl \
		--enable-plugins \
		--enable-threads
	$(MAKE) $(NJOBS) -C binutils/build1
	$(MAKE) -C binutils/build1 install DESTDIR=$(DESTDIR)
	mkdir -p stamps && touch $@

stamps/gcc-stage1: stamps/binutils1
	rm -rf gcc/stage1
	mkdir -p gcc/stage1
	: # We build a C++ compiler because of Bionic's C++ malloc.
	: # Don't build libstdc++ because it needs libc headers.
	cd gcc/stage1 && \
	  $(SET_PATH) CFLAGS_FOR_TARGET="$(CFLAGS_FOR_TARGET)" CXXFLAGS_FOR_TARGET="$(CXXFLAGS_FOR_TARGET)" CFLAGS="$(CFLAGS)" CXXFLAGS="$(CFLAGS)" ../gcc-current/configure \
		--prefix=$(DESTDIR)/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--disable-multilib \
		--with-gnu-as \
		--with-gnu-ld \
		--enable-languages=c,c++ \
		--disable-ppl-version-check \
		--disable-cloog-version-check \
		--enable-cloog-backend=isl \
		--disable-libssp --disable-nls \
		--disable-libmudflap \
		--disable-shared \
		--disable-sjlj-exceptions \
		--disable-libquadmath \
		--disable-libitm \
		--disable-libatomic \
		--with-float=soft \
		--with-fpu=vfp \
		--with-arch=armv5te \
		--enable-target-optspace \
		--disable-docs \
		--disable-nls \
		--enable-threads \
		--enable-tls \
		--disable-libgomp \
		--disable-libstdc__-v3 \
		--disable-libitm \
		--disable-libatomic
	$(SET_PATH) $(MAKE) $(NJOBS) -C gcc/stage1 CFLAGS_FOR_TARGET="$(CFLAGS_FOR_TARGET)" CXXFLAGS_FOR_TARGET="$(CXXFLAGS_FOR_TARGET)"
	$(SET_PATH) $(MAKE) $(NJOBS) -C gcc/stage1 install
	touch $@

stamps/bionic1: stamps/gcc-stage1
	# BUILD_TINY_ANDROID ?
	ONE_SHOT_MAKEFILE=build/libs/host/Android.mk $(MAKE) $(NJOBS) -C $(CURDIR)/android all_modules TARGET_TOOLS_PREFIX=$(TARGET_TOOLS_PREFIX) TARGET_PRODUCT=pandaboard showcommands
	ONE_SHOT_MAKEFILE=build/tools/acp/Android.mk $(MAKE) $(NJOBS) -C $(CURDIR)/android all_modules TARGET_TOOLS_PREFIX=$(TARGET_TOOLS_PREFIX) TARGET_PRODUCT=pandaboard showcommands
	ONE_SHOT_MAKEFILE=bionic/Android.mk $(MAKE) $(NJOBS) -C $(CURDIR)/android all_modules out/target/product/pandaboard/obj/lib/crtbegin_dynamic.o  TARGET_TOOLS_PREFIX=$(TARGET_TOOLS_PREFIX) TARGET_PRODUCT=pandaboard showcommands
	cp android/out/target/product/*/obj/lib/* $(DESTDIR)/usr/$(TARGET)/lib
	touch dummy.c
	$(SET_PATH) $(TARGET)-gcc -O2 -o dummy.o -c dummy.c
	$(SET_PATH) $(TARGET)-ar cru $(DESTDIR)/usr/$(TARGET)/lib/libpthread.a dummy.o
	$(SET_PATH) $(TARGET)-ranlib $(DESTDIR)/usr/$(TARGET)/lib/libpthread.a
	rm -f dummy.[co]

	touch $@

stamps/gcc-stage2: stamps/binutils1 stamps/bionic1
	rm -rf gcc/stage2
	mkdir -p gcc/stage2
	# FIXME should use --prefix=/usr & --with-build-sysroot ?
	cd gcc/stage2 && \
	  $(SET_PATH) CFLAGS_FOR_TARGET="$(CFLAGS_FOR_TARGET) -fexceptions" CXXFLAGS_FOR_TARGET="$(CXXFLAGS_FOR_TARGET) -frtti" CFLAGS="$(CFLAGS)" CXXFLAGS="$(CFLAGS)" ../gcc-current/configure \
		--prefix=$(DESTDIR)/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--disable-multilib \
		--with-gnu-as \
		--with-gnu-ld \
		--enable-languages=c,c++ \
		--disable-ppl-version-check \
		--disable-cloog-version-check \
		--enable-cloog-backend=isl \
		--disable-libssp \
		--disable-nls \
		--disable-libmudflap \
		--disable-shared \
		--disable-sjlj-exceptions \
		--disable-libquadmath \
		--disable-libitm \
		--disable-libatomic \
		--with-float=soft \
		--with-fpu=vfp \
		--with-arch=armv5te \
		--enable-target-optspace \
		--disable-docs \
		--disable-nls \
		--enable-threads \
		--enable-tls \
		--enable-libgomp \
		--disable-libitm \
		--disable-libatomic \
		--disable-libstdc__-v3
	$(SET_PATH) $(MAKE) $(NJOBS) -C gcc/stage2 CFLAGS_FOR_TARGET="$(CFLAGS_FOR_TARGET) -fexceptions" CXXFLAGS_FOR_TARGET="$(CXXFLAGS_FOR_TARGET) -frtti"
	$(SET_PATH) $(MAKE) -C gcc/stage2 install
	touch $@

build: build-arch build-indep

build-arch: stamps/gcc-stage2
build-indep:

clean: 
	dh_testdir
	dh_testroot
	rm -rf stamps
	rm -rf binutils/build1 gcc/stage1 gcc/stage2 android/out tmp
	dh_clean 

install: install-indep install-arch
install-indep:

install-arch:
	dh_testdir
	dh_testroot
	dh_prep -s 
	dh_installdirs -s

	tar -C $(DESTDIR) -c -f - . | tar -C $(d) -x -f -

	# FIXME: why bfd.h was not installed?!
	# Remove conflicting headers, defined in Android
	-cd $(d)/usr/$(TARGET)/include && rm -rf stdio.h sys stlport
	# Remove bionic, should be build with android build
	cd $(d)/usr/$(TARGET)/lib/ && rm -rf libc* libm.so libdl.so crt*.o

	rm -rf $(d)/usr/lib/libiberty.a
	rm -rf $(d)/usr/share/locale
	rm -rf $(d)/usr/share/man/man7
	rm -rf $(d)/usr/share/info

binary-indep: build-indep install-indep
	dh_testdir
	dh_testroot

binary-arch: build-arch install-arch
	dh_testdir
	dh_testroot
	dh_installchangelogs -s
	dh_installdocs -s
	dh_installexamples -s
	dh_installman -s
	dh_strip -s
	dh_compress -s
	dh_fixperms -s
	dh_installdeb -s
	dh_shlibdeps -s -X.so
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

get-orig-source:
	fakeroot ./debian/rules clean
	-quilt pop -a -f
	tar --exclude-vcs --transform='s,^,$(DEB_SOURCE)-$(DEB_VERSION_UPSTREAM)/,S' -caf ../$(DEB_SOURCE)_$(DEB_VERSION_UPSTREAM).orig.tar.xz android binutils gcc

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch configure
