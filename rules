#!/usr/bin/make -f
# -*- makefile -*-

#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

NJOBS = -j 12

d = debian/gcc-arm-linux-androideabi
DESTDIR = $(CURDIR)/tmp

include /usr/share/dpkg/default.mk

TARGET	= arm-linux-androideabi
TARGET_TOOLS_PATH = $(DESTDIR)/usr
TARGET_TOOLS_PREFIX = $(TARGET_TOOLS_PATH)/bin/$(TARGET)-

SET_PATH = PATH=$(DESTDIR)/usr/bin:$(PATH)
SET_CFLAGS_FOR_TARGET = CFLAGS_FOR_TARGET="-DTARGET_POSIX_IO -fno-short-enums"

USR = /usr
USR = /system
SYSROOT = $(CURDIR)/sys-root
FINAL_SYSROOT = /usr/lib/$(TARGET)/sys-root

ARCH = arm
KERNELARCH = $(ARCH)
GOLD = yes
ifeq ($(ARCH),aarch64)
  GOLD =
  KERNELARCH = arm64
endif

ifeq ($(GOLD),yes)
  GOLDFLAGS =--enable-ld --enable-gold=default
else
  GOLDFLAGS = --enable-ld=default
endif

GCCEXTRAARGS += \
	--with-float=soft \
	--with-fpu=vfp \
	--with-arch=armv5te \
	--enable-target-optspace

stamps/binutils-prepare:
	@mkdir -p stamps
	rm -rf binutils
	mkdir -p binutils
	tar -C binutils -x -f /usr/src/binutils/binutils-*.tar.*
	cd binutils && ln -sf binutils-* binutils
	touch $@

stamps/binutils1: stamps/binutils-prepare
	mkdir -p binutils/build1
	cd binutils/build1 && \
	  ../binutils/configure \
		--prefix=/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--with-sysroot=$(SYSROOT) \
		$(GOLDFLAGS) \
		--enable-plugins \
		--enable-threads \
		--disable-shared

	$(MAKE) $(NJOBS) -C binutils/build1
	$(MAKE) -C binutils/build1 install DESTDIR=$(DESTDIR)

ifeq ($(GOLD),yesXXX)
	rm -rf ld.bfd
	mkdir ld.bfd
	ln -s $(USR)/bin/$(TARGET)-ld.bfd ld.bfd/$(TARGET)-ld
	rm -rf binutils.bfd
	mkdir binutils.bfd
	ln -s $(USR)/$(TARGET)/bin/* binutils.bfd
	ln -sf ld.bfd binutils.bfd/ld
endif

	touch $@

stamps/gcc-prepare:
	mkdir -p stamps/
	rm -rf gcc
	cp -a /usr/src/gcc-4.8 gcc
	patch -p0 < debian/gcc-android.diff
	mkdir -p gcc/patches/android
	mkdir -p gcc/stamps
	cd gcc && debian/rules series
	cp gcc-patches/4.8/* gcc/patches/android
	sed -i 's|gcc/libgcc/|a/src/libgcc/|' gcc/patches/android/*
	ls gcc-patches/4.8/ | sed 's/^/android\//;s/$$/ -p1/' >> gcc/patches/series
	cd gcc && debian/rules patch
	touch $@

stamps/gcc-stage1: stamps/binutils1 stamps/gcc-prepare stamps/kernel-headers
	rm -rf gcc/stage1
	mkdir -p gcc/stage1
	: # We build a C++ compiler because of Bionic's C++ malloc.
	: # Don't build libstdc++ because it needs libc headers.
	cd gcc/stage1 && \
	  $(SET_PATH) $(SET_CFLAGS_FOR_TARGET) ../src/configure \
		--prefix=/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--with-sysroot=$(SYSROOT) \
		--disable-multilib --disable-__cxa_atexit --disable-libmudflap \
		--disable-libssp --enable-threads --enable-tls --disable-decimal-float \
		--disable-libgomp --disable-libquadmath --disable-shared \
		--disable-libatomic --disable-libsanitizer --disable-libitm \
		--disable-libstdc__-v3 --disable-sjlj-exceptions \
		--enable-languages=c,c++ \
		$(GCCEXTRAARGS)
	$(SET_PATH) $(SET_CFLAGS_FOR_TARGET) $(MAKE) $(NJOBS) -C gcc/stage1
	$(SET_PATH) $(SET_CFLAGS_FOR_TARGET) $(MAKE) -C gcc/stage1 install DESTDIR=$(DESTDIR)
	touch $@

stamps/kernel-headers:
	@mkdir -p stamps
	rm -rf $(SYSROOT)
	mkdir -p $(SYSROOT)$(USR)/include
	cp -a android/bionic/libm/include/math.h $(SYSROOT)$(USR)/include
	cp -a android/bionic/libm/include/arm/fenv.h $(SYSROOT)$(USR)/include
	for i in \
	  libthread_db/include libstdc++/include \
	  libc/include libc/arch-$(ARCH)/include libc/kernel/common \
	  libc/kernel/arch-$(ARCH); \
	do \
	  cp -a android/bionic/$$i/* $(SYSROOT)$(USR)/include/; \
	done
	mkdir -p $(SYSROOT)$(USR)/include/libstdc++
	cp -a android/bionic/libstdc++/include $(SYSROOT)$(USR)/include/libstdc++/
	cp -a android/external/stlport/stlport $(SYSROOT)$(USR)/include/
ifneq ($(USR),/usr)
	ln -sf $(notdir $(USR)) $(SYSROOT)/usr
endif
	touch $@

stamps/bionic1: stamps/gcc-stage1 stamps/kernel-headers
	: # Make them match the include directory structure we're building
	sed -i -e 's,\.\./include/header,../header,g;s,usr/include,system/include,g' \
		$(SYSROOT)$(USR)/include/stlport/stl/config/_android.h
	: # And don't insist on -DANDROID when gcc already defines __ANDROID__ for us
	sed -i -e 's,defined (ANDROID),defined (ANDROID) || defined (__ANDROID__),g' \
		$(SYSROOT)$(USR)/include/stlport/stl/config/_system.h

	$(MAKE) $(NJOBS) -C android \
		TARGET_TOOLS_PREFIX=$(TARGET_TOOLS_PREFIX) TARGET_PRODUCT=pandaboard \
		BUILD_TINY_ANDROID=true \
		out/target/product/pandaboard/obj/lib/crtbegin_dynamic.o \
		out/target/product/pandaboard/obj/lib/libc.so \
		out/target/product/pandaboard/obj/lib/libdl.so \
		out/target/product/pandaboard/obj/lib/libm.so \
		showcommands
	mkdir -p $(SYSROOT)$(USR)/lib
	cp android/out/target/product/*/obj/lib/* $(SYSROOT)$(USR)/lib/
	: # Android's pthread bits are built into bionic libc -- but lots of traditional
	: # Linux configure scripts and Makefiles just hardcode that there's a -lpthread...
	: # Let's accomodate them
	touch dummy.c
	$(SET_PATH) $(TARGET)-gcc -O2 -o dummy.o -c dummy.c
	$(SET_PATH) $(TARGET)-ar cru $(SYSROOT)$(USR)/lib/libpthread.a dummy.o
	rm -f dummy.[co]

	touch $@

stamps/gcc-stage2: stamps/binutils1 stamps/bionic1
	rm -rf gcc/stage2
	mkdir -p gcc/stage2
	cd gcc/stage2 && \
	  $(SET_PATH) $(SET_CFLAGS_FOR_TARGET) ../src/configure \
		--prefix=/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--with-sysroot=$(SYSROOT) \
		--disable-multilib --disable-__cxa-atexit --disable-libmudflap \
		--disable-libssp --enable-threads --enable-tls --disable-decimal-float \
		--disable-libgomp --disable-libquadmath --disable-shared \
		--disable-libatomic --disable-libsanitizer --disable-libitm \
		--disable-libstdc__-v3 --disable-sjlj-exceptions \
		--enable-languages=c,c++ \
		$(GCCEXTRAARGS)
	$(SET_PATH) $(MAKE) $(NJOBS) -C gcc/stage2
	$(SET_PATH) $(MAKE) -C gcc/stage2 install DESTDIR=$(DESTDIR)
	touch $@

stamps/bionic2: stamps/gcc-stage2
	$(MAKE) $(NJOBS) -C android \
		TARGET_TOOLS_PREFIX=$(TARGET_TOOLS_PREFIX) TARGET_PRODUCT=pandaboard \
		BUILD_TINY_ANDROID=true \
		out/target/product/pandaboard/obj/lib/libstdc++.so \
		showcommands

	ONE_SHOT_MAKEFILE=external/stlport/Android.mk \
	$(MAKE) $(NJOBS) -C android \
		TARGET_TOOLS_PREFIX=$(TARGET_TOOLS_PREFIX) TARGET_PRODUCT=pandaboard \
		BUILD_TINY_ANDROID=true \
		all_modules showcommands
	cp android/out/target/product/*/obj/lib/*stl* $(SYSROOT)$(USR)/lib/
	cp android/out/target/product/*/obj/lib/*stdc* $(SYSROOT)$(USR)/lib/
	touch $@

# FIXME: why is this needed at all?
stamps/gcc-stage3: stamps/binutils1 stamps/bionic2
	rm -rf gcc/stage3
	mkdir -p gcc/stage3
	cd gcc/stage3 && \
	  $(SET_PATH) ../src/configure \
		--prefix=/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--with-sysroot=$(FINAL_SYSROOT) \
		--with-build-sysroot=$(SYSROOT) \
		--disable-multilib \
		--disable-libmudflap \
		--disable-libssp \
		--disable-libgomp --disable-libquadmath \
		--disable-libatomic --disable-libsanitizer --disable-libitm \
		--enable-__cxa_atexit \
		--disable-shared \
		--enable-languages=c,c++,objc,obj-c++,lto \
		$(GCCEXTRAARGS)
	$(SET_PATH) $(MAKE) $(NJOBS) -C gcc/stage3
	$(SET_PATH) $(MAKE) -C gcc/stage3 install DESTDIR=$(DESTDIR)
	touch $@

# second build with --enable-shared, and FINAL_SYSROOT
stamps/binutils2: stamps/binutils-prepare stamps/bionic2
	mkdir -p binutils/build2
	cd binutils/build2 && \
	  ../binutils/configure \
		--prefix=/usr \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--host=$(DEB_BUILD_GNU_TYPE) \
		--target=$(TARGET) \
		--with-sysroot=$(FINAL_SYSROOT) \
		$(GOLDFLAGS) \
		--enable-plugins \
		--enable-threads \
		--enable-shared

	$(MAKE) $(NJOBS) -C binutils/build2
	$(MAKE) -C binutils/build2 install DESTDIR=$(DESTDIR)

	touch $@

build: build-arch build-indep

build-arch: stamps/bionic2 stamps/binutils2
build-indep:

clean: 
	dh_testdir
	dh_testroot
	rm -rf stamps
	rm -rf binutils gcc kernel sys-root android/out tmp
	rm -rf android/frameworks/native/opengl/tests
	ln -sf build/core/root.mk android/Makefile
	dh_clean 

install: install-indep install-arch
install-indep:

install-arch:
	dh_testdir
	dh_testroot
	dh_prep -s 
	dh_installdirs -s

	tar -C $(DESTDIR) -c -f - . | tar -C $(d) -x -f -
	mkdir -p $(d)/usr/$(TARGET)/include
	cp -a $(SYSROOT)$(USR)/include/* $(d)/usr/$(TARGET)/include/.
	mkdir -p $(d)/usr/$(TARGET)/lib
	cp -a $(SYSROOT)$(USR)/lib/* $(d)/usr/$(TARGET)/lib/.

	rm -rf $(d)/usr/share/locale
	rm -rf $(d)/usr/share/man/man7
	rm -rf $(d)/usr/share/info

binary-indep: build-indep install-indep
	dh_testdir
	dh_testroot
ifeq (0,1)
	dh_installchangelogs -i
	dh_installdocs -i
	dh_installexamples -i
	dh_installman -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i
endif

binary-arch: build-arch install-arch
	dh_testdir
	dh_testroot
	dh_installchangelogs -s
	dh_installdocs -s
	dh_installexamples -s
	dh_installman -s
	dh_strip -s
	dh_compress -s
	dh_fixperms -s
	dh_installdeb -s
	dh_shlibdeps -s -X.so
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

get-orig-source:
	fakeroot ./debian/rules clean
	-quilt pop -a -f
	tar --exclude-vcs --transform='s,^,$(DEB_SOURCE)-$(DEB_VERSION_UPSTREAM)/,S' -caf ../$(DEB_SOURCE)_$(DEB_VERSION_UPSTREAM).orig.tar.xz android gcc-patches

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch configure
